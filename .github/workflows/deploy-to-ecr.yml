name: Java CI/CD to Amazon ECR with ECS Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private

      - name: Build, tag, and push Docker image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 985539758163.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: project1
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest  .
          
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Create imagedefinitions.json
        env:
          ECR_REGISTRY: 985539758163.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: project1
          IMAGE_TAG: latest
          CONTAINER_NAME: project1-container
        run: |
          echo '[{"name":"'$CONTAINER_NAME'","imageUri":"'$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG'"}]' > imagedefinitions.json
          cat imagedefinitions.json

      - name: Create ZIP file
        run: |
          zip -r deployment-artifacts.zip imagedefinitions.json

      - name: Upload ZIP artifact to S3
        env:
          S3_BUCKET: essilfie2
          S3_KEY: deployment-source/deployment-artifacts.zip
        run: |
          aws s3 cp deployment-artifacts.zip s3://$S3_BUCKET/$S3_KEY

      - name: Trigger CodePipeline
        env:
          PIPELINE_NAME: DeployToECS
        run: |
          aws codepipeline start-pipeline-execution --name $PIPELINE_NAME